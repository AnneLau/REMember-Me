undefined '00000'
IncomingMessage {
    _readableState:
        ReadableState {
        objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: null,
            ended: false,
            endEmitted: false,
            reading: false,
            sync: true,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: true,
            decoder: null,
            encoding: null },
    readable: true,
        domain: null,
        _events: {},
    _eventsCount: 0,
        _maxListeners: undefined,
        socket:
    Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            bytesRead: 738,
                _externalStream: {},
            fd: -1,
                reading: true,
                owner: [Circular],
                onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0 },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: [Object],
                length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: false,
                defaultEncoding: 'utf8',
                ranOut: false,
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            domain: null,
            _events:
        { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
                timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
                data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
        _eventsCount: 10,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function],
                writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 0,
                prefinished: false,
                errorEmitted: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            destroyed: false,
            _bytesDispatched: 1997,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                _connections: 4,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                _pendingResponseData: 0,
                _connectionKey: '6::::29323' },
        _server:
            Server {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                _connections: 4,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                _pendingResponseData: 0,
                _connectionKey: '6::::29323' },
        _idleTimeout: 120000,
            _idleNext:
        Socket {
            connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: null,
                _readableState: [Object],
                readable: true,
                domain: null,
                _events: [Object],
                _eventsCount: 10,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: true,
                destroyed: false,
                _bytesDispatched: 891,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Object],
                _server: [Object],
                _idleTimeout: 120000,
                _idleNext: [Object],
                _idlePrev: [Circular],
                _idleStart: 3883,
                parser: [Object],
                on: [Function: socketOnWrap],
            _paused: false,
                read: [Function],
                _consuming: true,
                _httpMessage: null },
        _idlePrev:
            TimersList {
            _idleNext: [Circular],
                _idlePrev: [Object],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000 },
        _idleStart: 4075,
            parser:
        HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: onParserExecute],
            _headers: [],
                _url: '',
                _consumed: true,
                socket: [Circular],
                incoming: [Circular],
                outgoing: null,
                maxHeaderPairs: 2000,
                onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage:
        ServerResponse {
            domain: null,
                _events: [Object],
                _eventsCount: 1,
                _maxListeners: undefined,
                output: [],
                outputEncodings: [],
                outputCallbacks: [],
                outputSize: 0,
                writable: true,
                _last: false,
                upgrading: false,
                chunkedEncoding: false,
                shouldKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: true,
                _removedHeader: {},
            _contentLength: null,
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: false,
                socket: [Circular],
                connection: [Circular],
                _header: null,
                _headers: [Object],
                _headerNames: [Object],
                _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
                locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end] } },
    connection:
        Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            bytesRead: 738,
                _externalStream: {},
            fd: -1,
                reading: true,
                owner: [Circular],
                onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0 },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: [Object],
                length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: false,
                defaultEncoding: 'utf8',
                ranOut: false,
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            domain: null,
            _events:
        { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
                timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
                data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
        _eventsCount: 10,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function],
                writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 0,
                prefinished: false,
                errorEmitted: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            destroyed: false,
            _bytesDispatched: 1997,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                _connections: 4,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                _pendingResponseData: 0,
                _connectionKey: '6::::29323' },
        _server:
            Server {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                _connections: 4,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                _pendingResponseData: 0,
                _connectionKey: '6::::29323' },
        _idleTimeout: 120000,
            _idleNext:
        Socket {
            connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: null,
                _readableState: [Object],
                readable: true,
                domain: null,
                _events: [Object],
                _eventsCount: 10,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: true,
                destroyed: false,
                _bytesDispatched: 891,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Object],
                _server: [Object],
                _idleTimeout: 120000,
                _idleNext: [Object],
                _idlePrev: [Circular],
                _idleStart: 3883,
                parser: [Object],
                on: [Function: socketOnWrap],
            _paused: false,
                read: [Function],
                _consuming: true,
                _httpMessage: null },
        _idlePrev:
            TimersList {
            _idleNext: [Circular],
                _idlePrev: [Object],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000 },
        _idleStart: 4075,
            parser:
        HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: onParserExecute],
            _headers: [],
                _url: '',
                _consumed: true,
                socket: [Circular],
                incoming: [Circular],
                outgoing: null,
                maxHeaderPairs: 2000,
                onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage:
        ServerResponse {
            domain: null,
                _events: [Object],
                _eventsCount: 1,
                _maxListeners: undefined,
                output: [],
                outputEncodings: [],
                outputCallbacks: [],
                outputSize: 0,
                writable: true,
                _last: false,
                upgrading: false,
                chunkedEncoding: false,
                shouldKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: true,
                _removedHeader: {},
            _contentLength: null,
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: false,
                socket: [Circular],
                connection: [Circular],
                _header: null,
                _headers: [Object],
                _headerNames: [Object],
                _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
                locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end] } },
    httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: false,
        headers:
    { host: 'localhost:29323',
        connection: 'keep-alive',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',
        origin: 'http://localhost:29323',
        accept: '*/*',
        referer: 'http://localhost:29323/',
        'accept-encoding': 'gzip, deflate, sdch, br',
        'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
    rawHeaders:
        [ 'Host',
            'localhost:29323',
            'Connection',
            'keep-alive',
            'User-Agent',
            'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36',
            'Origin',
            'http://localhost:29323',
            'Accept',
            '*/*',
            'Referer',
            'http://localhost:29323/',
            'Accept-Encoding',
            'gzip, deflate, sdch, br',
            'Accept-Language',
            'zh-CN,zh;q=0.8,en;q=0.6' ],
            trailers: {},
    rawTrailers: [],
        upgrade: false,
        url: '/',
        method: 'DELETE',
        statusCode: null,
        statusMessage: null,
        client:
    Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            bytesRead: 738,
                _externalStream: {},
            fd: -1,
                reading: true,
                owner: [Circular],
                onread: [Function: onread],
            onconnection: null,
                writeQueueSize: 0 },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: [Object],
                length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: false,
                defaultEncoding: 'utf8',
                ranOut: false,
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            domain: null,
            _events:
        { end: [Object],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
                timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
                data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause] },
        _eventsCount: 10,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function],
                writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 0,
                prefinished: false,
                errorEmitted: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            destroyed: false,
            _bytesDispatched: 1997,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                _connections: 4,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                _pendingResponseData: 0,
                _connectionKey: '6::::29323' },
        _server:
            Server {
            domain: null,
                _events: [Object],
                _eventsCount: 2,
                _maxListeners: undefined,
                _connections: 4,
                _handle: [Object],
                _usingSlaves: false,
                _slaves: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                _pendingResponseData: 0,
                _connectionKey: '6::::29323' },
        _idleTimeout: 120000,
            _idleNext:
        Socket {
            connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: null,
                _readableState: [Object],
                readable: true,
                domain: null,
                _events: [Object],
                _eventsCount: 10,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: true,
                destroyed: false,
                _bytesDispatched: 891,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Object],
                _server: [Object],
                _idleTimeout: 120000,
                _idleNext: [Object],
                _idlePrev: [Circular],
                _idleStart: 3883,
                parser: [Object],
                on: [Function: socketOnWrap],
            _paused: false,
                read: [Function],
                _consuming: true,
                _httpMessage: null },
        _idlePrev:
            TimersList {
            _idleNext: [Circular],
                _idlePrev: [Object],
                _timer: [Object],
                _unrefed: true,
                msecs: 120000 },
        _idleStart: 4075,
            parser:
        HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: onParserExecute],
            _headers: [],
                _url: '',
                _consumed: true,
                socket: [Circular],
                incoming: [Circular],
                outgoing: null,
                maxHeaderPairs: 2000,
                onIncoming: [Function: parserOnIncoming] },
        on: [Function: socketOnWrap],
        _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage:
        ServerResponse {
            domain: null,
                _events: [Object],
                _eventsCount: 1,
                _maxListeners: undefined,
                output: [],
                outputEncodings: [],
                outputCallbacks: [],
                outputSize: 0,
                writable: true,
                _last: false,
                upgrading: false,
                chunkedEncoding: false,
                shouldKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: true,
                _removedHeader: {},
            _contentLength: null,
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: false,
                socket: [Circular],
                connection: [Circular],
                _header: null,
                _headers: [Object],
                _headerNames: [Object],
                _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
                locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end] } },
    _consuming: false,
        _dumped: false,
        next: [Function: next],
    baseUrl: '/session',
        originalUrl: '/session',
        _parsedUrl:
    Url {
        protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/',
            path: '/',
            href: '/',
            _raw: '/' },
    params: {},
    query: {},
    res:
        ServerResponse {
        domain: null,
            _events: { finish: [Function: resOnFinish] },
        _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            upgrading: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
        _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket:
        Socket {
            connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: null,
                _readableState: [Object],
                readable: true,
                domain: null,
                _events: [Object],
                _eventsCount: 10,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: true,
                destroyed: false,
                _bytesDispatched: 1997,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Object],
                _server: [Object],
                _idleTimeout: 120000,
                _idleNext: [Object],
                _idlePrev: [Object],
                _idleStart: 4075,
                parser: [Object],
                on: [Function: socketOnWrap],
            _paused: false,
                read: [Function],
                _consuming: true,
                _httpMessage: [Circular] },
        connection:
            Socket {
            connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: null,
                _readableState: [Object],
                readable: true,
                domain: null,
                _events: [Object],
                _eventsCount: 10,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: true,
                destroyed: false,
                _bytesDispatched: 1997,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Object],
                _server: [Object],
                _idleTimeout: 120000,
                _idleNext: [Object],
                _idlePrev: [Object],
                _idleStart: 4075,
                parser: [Object],
                on: [Function: socketOnWrap],
            _paused: false,
                read: [Function],
                _consuming: true,
                _httpMessage: [Circular] },
        _header: null,
            _headers:
        { 'x-powered-by': 'Express',
            'access-control-allow-origin': '*',
            'access-control-allow-methods': 'GET,POST,DELETE' },
        _headerNames:
        { 'x-powered-by': 'X-Powered-By',
            'access-control-allow-origin': 'Access-Control-Allow-Origin',
            'access-control-allow-methods': 'Access-Control-Allow-Methods' },
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
            locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] },
    body: {},
    secret: undefined,
        cookies: {},
    signedCookies: {},
    _parsedOriginalUrl:
        Url {
        protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/session',
            path: '/session',
            href: '/session',
            _raw: '/session' },
    sessionStore:
        MongoStore {
        domain: null,
            _events:
        { disconnect: [Function: ondisconnect],
            connect: [Function: onconnect] },
        _eventsCount: 2,
            _maxListeners: undefined,
            ttl: 1209600,
            collectionName: 'sessions',
            autoRemove: 'native',
            autoRemoveInterval: 10,
            transformFunctions:
        { serialize: [Function: stringify],
            unserialize: [Function: parse] },
        options: { url: 'mongodb://127.0.0.1/blog' },
        state: 'connected',
            generate: [Function],
            db:
        Db {
            domain: null,
                _events: {},
            _eventsCount: 0,
                _maxListeners: undefined,
                s: [Object],
                serverConfig: [Getter],
                bufferMaxEntries: [Getter],
                databaseName: [Getter] },
        collectionReadyPromise:
            Promise {
            _bitField: 33554432,
                _fulfillmentHandler0: undefined,
                _rejectionHandler0: [Object],
                _promise0: undefined,
                _receiver0: undefined },
        collection:
            Collection {
            s: [Object],
                countAsync: [Function: ret],
            findOneAsync: [Function: ret],
            removeAsync: [Function: ret],
            dropAsync: [Function: ret],
            ensureIndexAsync: [Function: ret],
            updateAsync: [Function: ret] } },
    sessionID: 'NDP-8pxApJtm6Tn9CY0MgGrZn2clyrxI',
        session:
    Session {
        cookie:
        { path: '/',
            _expires: 2017-02-23T17:35:06.210Z,
            originalMaxAge: 80000,
            httpOnly: true } },
    route:
        Route {
        path: '/',
            stack: [ [Object], [Object], [Object] ],
            methods: { _all: true, post: true, delete: true } } }
